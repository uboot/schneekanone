/****************************************************************************** CSchneeSpriteCel.h   ******************************************************************************/#pragma once#include <QDOffscreen.h>#include "CSpriteCel.h"class CSchneeSpriteCel : public CSpriteCel {public:				CSchneeSpriteCel(short cicnID);				virtual	~CSchneeSpriteCel();	short		GetHorzCenterOffset() { return fHorzCenterOffset; }	short		GetVertCenterOffset() { return fVertCenterOffset; }	Boolean	CanCollide() { return fCanCollide; }		virtual Boolean	Intersect(CSchneeSpriteCel * testCel, 								const Rect * testSpriteBnds, 								const Rect * mySpriteBnds);	virtual	short		GetCollisionRectOffsetX()								{ return fHorzCollisionMaskOffset; }	virtual	short		GetCollisionRectOffsetY()								{ return fVertCollisionMaskOffset; }	virtual	PixMapHandle	GetCollisionMask() { return fCollisionMaskPixels; }	virtual	void			GetCollisionRect(Rect * theRect)									{ *theRect = fCollisionRect; }										protected:		OSErr		MakeCollisionPixMask(CIconHandle iconH);	OSErr		InitCollisionMaskData(CIconHandle iconH);		PixMapHandle	fCollisionMaskPixels;	Rect		fCollisionRect;		short		fHorzCollisionMaskOffset;	short		fVertCollisionMaskOffset;		GWorldPtr	fCollisionMask;		short		fHorzCenterOffset;	short		fVertCenterOffset;		Boolean	fCanCollide;		OSErr		MakeCollisionMaskRgn(CIconHandle iconH);};