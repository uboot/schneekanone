/****************************************************************************** CSpriteGroup.cp   ******************************************************************************/#include "Assert.h"#include "CSpriteGroup.h"#include "CSprite.h"CSpriteGroup::~CSpriteGroup(){	delete(fTestGroups);}void	CSpriteGroup::AddGroupToCheck(CSpriteGroup * testGroup){	if(fTestGroups == nil)		fTestGroups = new CSpriteGroup;	ASSERT(fTestGroups);		fTestGroups->Add(testGroup);}void	CSpriteGroup::CheckForCollisions(){	// Cycle through all the installed groups checking for collisions	if(fTestGroups)	{		for(long i = 1; i <= fTestGroups->GetObjectCount(); i++)		{			CSpriteGroup * currGroup;						currGroup = (CSpriteGroup *)fTestGroups->GetNthObject(i);						// Loop through all the sprites in the group			for( long j = 1; j <= currGroup->GetObjectCount(); j++)			{				CSprite *	testSprite;								testSprite = (CSprite *) currGroup->GetNthObject(j);								for( long k = 1; k <= this->GetObjectCount(); k++)				{					CSprite *	currSprite;					Rect		testBnds, currBnds, sectBnds;										currSprite = (CSprite *) this->GetNthObject(k);					testSprite->GetPosition(&testBnds);					currSprite->GetPosition(&currBnds);										if(SectRect(&testBnds, &currBnds, &sectBnds))						currSprite->Collide(testSprite);				}							}		}		}}