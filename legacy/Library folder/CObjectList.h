/****************************************************************************** CObjectList.h   ******************************************************************************/#pragma once#include "Assert.h"class CObjectList {public:	// Creation	CObjectList(long initialItems = 4);		// Destruction	~CObjectList();	void	FreeAll();		// Status	long 		GetObjectCount() { return fCount;}	Boolean		IsEmpty() { return fCount == 0; }		// Inserting and removing from list	void		Add(void * object);	void		Remove(void * object);		// Indexing through list	virtual	void *		GetNthObject(long index)				{					if(index < 1 || index > fCount)						return nil;					else						return((void*) (*fArray)[index-1]);				}					void		EmptyOutList() { ResizeArray(0); }	/*void		AddAtNthPosition(void * object, long index); mf79 lšschen */	void		MoveToAnotherPosition(long source, long destination);					protected:	long **		fArray;	// Hold the handle of object pointers	long		fCount;	// Number of objects in list		void		InsertAtNthPosition(void * object, long index);	void		ResizeArray(long slots);	long		ObjectOffset(long index) 					{ return (index-1) * sizeof(void *); }		long		FindIndex(void * object);	void *		ObjectPtr(long index) 					{ return &((char*)*fArray)[ ObjectOffset(index) ]; }};