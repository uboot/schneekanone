/****************************************************************************** CSoundFX.h   ******************************************************************************/#pragma once#include <sound.h>// Maximum number of channels open at one time#define	kMaxChannels	2typedef enum {	kNothingPlaying = -32767,	kLowestPriority = 0,	kMedPriority,	kHighPriority,	kExplosionPriority,	kBonusPriority,	kAlarmPriority = 255} SoundPriority;typedef struct {	SndChannelPtr	channelUsed;	Boolean		stillPlaying;	SoundPriority	priority;	Handle			currSnd;} AsynchChannel;class CSoundFX{public:	// Construction & destruction	CSoundFX();	~CSoundFX();		// Cleans up idle channels. Call during your game loop	void SoundFXTask();		// Play sound in background depending upon priority	void PlaySnd(short sndID, SoundPriority priority);		// Plays a snd without respecting priority or sound control	void PlaySndAlarm(short sndID);		// Sound control	void Enable() { fSoundStopped = TRUE; }	void Disable() { fSoundStopped = FALSE; }		void Silence();		private:	AsynchChannel	fChannels[kMaxChannels];	Boolean			fSoundStopped;};